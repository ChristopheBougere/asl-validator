{
  "$id": "http://asl-validator.cloud/map.json#",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "Type": {
      "type": "string",
      "enum": ["Map"]
    },
    "Next": {
      "type": "string"
    },
    "End": {
      "enum": [true]
    },
    "Comment": {
      "type": "string"
    },
    "OutputPath": {
      "$ref": "paths.json#/definitions/asl_path"
    },
    "InputPath": {
      "$ref": "paths.json#/definitions/asl_path"
    },
    "ResultPath": {
      "$ref": "paths.json#/definitions/asl_ref_path"
    },
    "ItemsPath": {
      "$ref": "paths.json#/definitions/asl_ref_path"
    },
    "Label": {
      "type": "string"
    },
    "MaxConcurrency": {
      "type": "number",
      "minimum": 0
    },
    "ItemReader": {
      "$comment": "Allow any object for now and update in a subsequent PR to support S3 buckets and other input sources",
      "type": "object"
    },
    "ItemProcessor": {
      "type": "object",
      "allOf": [{ "$ref": "base-state-machine.json#" }],
      "oneOf": [
        {
          "properties": {
            "ProcessorConfig": {
              "type": "object",
              "properties": {
                "Mode": {
                  "type": "string",
                  "enum": ["INLINE"]
                }
              }
            }
          }
        },
        {
          "properties": {
            "ProcessorConfig": {
              "type": "object",
              "properties": {
                "Mode": {
                  "type": "string",
                  "enum": ["DISTRIBUTED"]
                },
                "ExecutionType": {
                  "type": "string",
                  "enum": ["EXPRESS", "STANDARD"]
                }
              }
            }
          }
        }
      ]
    },
    "Iterator": {
      "$ref": "base-state-machine.json#"
    },
    "Parameters": {
      "$ref": "paths.json#/definitions/asl_payload_template"
    },
    "ItemSelector": {
      "$ref": "paths.json#/definitions/asl_payload_template"
    },
    "ItemBatcher":{
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "MaxItemsPerBatch": {
              "type": "number"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "MaxItemsPerBatchPath": {
              "$ref": "paths.json#/definitions/asl_ref_path"
            }
          }
        }
      ]
    },
    "ResultSelector": {
      "$ref": "paths.json#/definitions/asl_payload_template"
    },
    "ResultWriter": {
      "$comment": "Allow any object for now and update in a subsequent PR to support S3 buckets and other outputs",
      "type": "object"
    },
    "Retry": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "ErrorEquals": {
            "type": "array",
            "items": {
              "$ref": "errors.json#"
            }
          },
          "IntervalSeconds": {
            "type": "number",
            "minimum": 0
          },
          "MaxAttempts": {
            "type": "number",
            "minimum": 0
          },
          "BackoffRate": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": ["ErrorEquals"]
      }
    },
    "Catch": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "ErrorEquals": {
            "type": "array",
            "items": {
              "$ref": "errors.json#"
            }
          },
          "Next": {
            "type": "string"
          }
        },
        "required": ["ErrorEquals", "Next"]
      }
    }
  },
  "oneOf": [
    {
      "required": [
        "Next",
        "ItemProcessor"
      ]
    },
    {
      "required": [
        "Next",
        "Iterator"
      ]
    },
    {
      "required": [
        "End",
        "Iterator"
      ]
    },
    {
      "required": [
        "End",
        "ItemProcessor"
      ]
    }
  ],
  "required": ["Type"],
  "additionalProperties": false
}
